{"format_version":"1.19.0","animation_controllers":{"controller.animation.spark.duel_opponent.movement":{"states":{"default":{"animations":["idle"],"transitions":[{"sit":"q.is_baby"},{"walk":"q.ground_speed > 1.4"}],"blend_transition":0.1},"walk":{"animations":["walk"],"transitions":[{"sit":"q.is_baby"},{"default":"q.ground_speed < 0.5"}],"blend_transition":0.1},"sit":{"animations":["sit"],"transitions":[{"walk":"!q.is_baby && q.ground_speed > 1.4"},{"default":"!q.is_baby"}],"blend_transition":0.1}}},"controller.animation.spark.duel_opponent.dueling":{"states":{"none":{"animations":["idle"]},"default":{"animations":["guard"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"}],"blend_transition":0.14},"attack":{"animations":[{"attack1":"v.attack_variant == 0"},{"attack2":"v.attack_variant == 1"},{"attack3":"v.attack_variant == 2"}],"on_entry":["v.attack_variant = Math.random_integer(0, 2);"],"transitions":[{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.any_animation_finished"}],"blend_transition":0.14},"power_attack":{"animations":["power_attack"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished"}],"blend_transition":0.14},"block":{"animations":["block"],"transitions":[{"block_hit":"q.property('spark:blocked_attack')"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"block_hit":{"animations":[{"block_react1":"v.block_react_variant == 0"},{"block_react2":"v.block_react_variant == 1"}],"on_entry":["v.block_react_variant = Math.random_integer(0, 1);"],"transitions":[{"default":"q.any_animation_finished && q.property('spark:move') != 'block'"},{"block":"q.any_animation_finished"}],"blend_transition":0.14},"withdraw":{"animations":["withdraw"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"approach":{"animations":["dash_forward"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"retreat":{"animations":["dash_backward"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"left":{"animations":["dash_left"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"right":{"animations":["dash_right"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"defeated":{"animations":["defeated"]},"won":{"animations":["guard"]}}},"controller.animation.spark.sith_opponent.dueling":{"states":{"none":{"animations":["idle"]},"default":{"animations":["guard"],"transitions":[{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"defeated":"q.property('spark:move') == 'defeated'"}],"blend_transition":0.14},"attack":{"animations":[{"attack1":"v.attack_variant == 0"},{"attack2":"v.attack_variant == 1"},{"attack3":"v.attack_variant == 2"}],"on_entry":["v.attack_variant = Math.random_integer(0, 2);"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.any_animation_finished"}],"blend_transition":0.14},"power_attack":{"animations":["power_attack"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished"}],"blend_transition":0.14},"special_attack":{"animations":["special_attack"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished"}],"blend_transition":0.14},"block":{"animations":["block"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"block_hit":"q.property('spark:blocked_attack')"},{"attack":"q.property('spark:move') == 'attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"block_hit":{"animations":[{"block_react1":"v.block_react_variant == 0"},{"block_react2":"v.block_react_variant == 1"}],"on_entry":["v.block_react_variant = Math.random_integer(0, 1);"],"transitions":[{"default":"q.any_animation_finished && q.property('spark:move') != 'block'"},{"block":"q.any_animation_finished"}],"blend_transition":0.14},"withdraw":{"animations":["withdraw"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"approach":{"animations":["dash_forward"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"retreat":{"animations":["dash_backward"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"left":"q.property('spark:move') == 'left'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"left":{"animations":["dash_left"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"right":"q.property('spark:move') == 'right'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"right":{"animations":["dash_right"],"transitions":[{"defeated":"q.property('spark:move') == 'defeated'"},{"attack":"q.property('spark:move') == 'attack'"},{"power_attack":"q.property('spark:move') == 'power_attack'"},{"special_attack":"q.property('spark:move') == 'special_attack'"},{"block_hit":"q.property('spark:blocked_attack')"},{"block":"q.property('spark:move') == 'block'"},{"withdraw":"q.property('spark:move') == 'withdraw'"},{"approach":"q.property('spark:move') == 'approach'"},{"retreat":"q.property('spark:move') == 'retreat'"},{"left":"q.property('spark:move') == 'left'"},{"won":"q.property('spark:move') == 'won'"},{"default":"q.all_animations_finished && q.property('spark:move') == 'idle'"}],"blend_transition":0.14},"defeated":{"animations":["defeated"],"transitions":[{"disappear":"q.anim_time > 2"}]},"won":{"animations":["guard"]},"disappear":{"animations":["disappear"]}}}}}
